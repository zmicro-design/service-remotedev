#!/bin/bash

check() {
  if [ ! -f $SERVICE_CONFIG ]; then
     touch $SERVICE_CONFIG
  fi

  if [ "$DEBUG" = "true" ]; then
    log::info "[remotedev] SERVICE_REMOTEDEV_COMPANY: $SERVICE_REMOTEDEV_COMPANY"
    log::info "[remotedev] SERVICE_REMOTEDEV_GIT_USER: $SERVICE_REMOTEDEV_GIT_USER"
    log::info "[remotedev] SERVICE_REMOTEDEV_GIT_EMAIL: $SERVICE_REMOTEDEV_GIT_EMAIL"
    log::info "[remotedev] SERVICE_REMOTEDEV_SSH_PORT: $SERVICE_REMOTEDEV_SSH_PORT"
    log::info "[remotedev] SERVICE_REMOTEDEV_PREVILEGED: $SERVICE_REMOTEDEV_PREVILEGED"
  fi

  config::check_or_set SERVICE_REMOTEDEV_COMPANY text $SERVICE_CONFIG
  # config::check_or_set SERVICE_REMOTEDEV_SOURCE_CODE_DIR text $SERVICE_CONFIG
  config::check_or_set SERVICE_REMOTEDEV_GIT_USER text $SERVICE_CONFIG
  config::check_or_set SERVICE_REMOTEDEV_GIT_EMAIL text $SERVICE_CONFIG
  config::check_or_set SERVICE_REMOTEDEV_SSH_PORT text $SERVICE_CONFIG
  config::check_or_set SERVICE_REMOTEDEV_PREVILEGED yesno $SERVICE_CONFIG

  # USER / GROUP
  export SERVICE_REMOTEDEV_USER_ID=$(id -u)
  export SERVICE_REMOTEDEV_GROUP_ID=$(id -g)
  # Docker
  export SERVICE_REMOTEDEV_DOCKER_SOCK=/var/run/docker.sock
  # @TODO placeholder
  export SERVICE_REMOTEDEV_DOCKER_CLI=/bin/bash
  which docker >> /dev/null 2>&1
  if [ $? -eq 0 ]; then
    export SERVICE_REMOTEDEV_DOCKER_CLI=$(which docker)
  fi

  if [ "$SERVICE_REMOTEDEV_PREVILEGED" = "false" ]; then
    local fake_docker_sock=/tmp/fake_docker.sock
    if [ ! -f $fake_docker_sock ]; then
      touch $fake_docker_sock
      echo "no permission, fake docker sock" > $fake_docker_sock
    fi

    export SERVICE_REMOTEDEV_DOCKER_SOCK=$fake_docker_sock
  fi
}

check $@
